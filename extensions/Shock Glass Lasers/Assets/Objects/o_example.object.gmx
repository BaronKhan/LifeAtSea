<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_logo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///this object is not important. It just controls the demo.
//You can use the individual objects separately.
//the shockwave object is the only object that has a special creation script.
//the other objects may be created with instance_create.
alarm[0]=room_speed;
//draw_set_halign(fa_left)
repeat(choose(3,4,5,6))
instance_create(random(room_width),random(room_height),o_laserturret)
image_blend=random_color();
image_angle=tolerance(30);
image_scale(.8+random(.4))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///this is an example for creating a shockwave.
//syntax: x,y,starting radius, ending radius, steps between updates of the drawing,expansion rate in % of the radius, spin (degrees per step), twist (distortion, in degrees), inner color, middle color, outer color, alpha
create_shockwave(random(room_width),random(room_height),0,100+random(400),2,.04,choose(0,tolerance(60)),choose(0,tolerance(90)),random_color(),random_color(),random_color(),1)
alarm[0]=12;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(10,20,'fps: '+string(fps)+'#Mouse wheel changes triangle count and magnification#Esc to Exit##Draw_GUI event drawings are covered up by magnifiers with normal blending.')
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw a grid, then draw the title.
//none of this is needed for the rest of the objects to work
draw_self()
draw_set_color(c_dkgray)
for (i=0; i&lt;room_width; i+=32)
{
    draw_line(i,0,i,room_height)
}

for (i=0; i&lt;room_height; i+=32)
{
    draw_line(0,i,room_width,i)
}
draw_set_color(c_white)

draw_text(view_xview+10,view_yview+100,'Drawings in regular draw events are magnified in the draw gui event')
draw_set_halign(fa_center)
draw_text_transformed(640,360,'Shock Glass',9.9*image_xscale,9.9*image_yscale,image_angle)
draw_set_color(image_blend)
draw_text_transformed(view_xview+view_wview/2,view_yview+view_hview/2,'Shock Glass',10*image_xscale,10*image_yscale,image_angle)
draw_set_halign(fa_left)
draw_reset()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,64</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
