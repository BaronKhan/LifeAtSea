<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

init_phy_particles();

//The particle!
phyParticle = global.Sand; //Set this in the creation event, make sure that the particle exists!

//the particle creation variables
partHorSpd = 0; //horizontal speed
partVerSpd = 0; //vertical speed
partColor = c_white; //color!
partAlpha = 1; //opacity aka transparency

partLastGroup = -1;
partAngSpd = 0;
partStrength = 0;
phyGroupState = phy_particle_group_flag_solid;

//Start create particles alarm!
alarm[0] = 1;

instance_create(room_width/4, room_height+30, obj_bubble);
instance_create(room_width/2, room_height+30, obj_bubble);
instance_create(3*room_width/4, room_height+30, obj_bubble);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//physics_particle_group_begin(phyParticle, phyGroupState, x+(32*image_xscale)/2, y+(32*image_yscale)/2, image_angle, partHorSpd, partVerSpd, partAngSpd, partColor, partAlpha, partStrength, get_particle_id(phyParticle));
//physics_particle_group_box((32*image_xscale)/2, (32*image_yscale)/2);
//physics_particle_group_box(room_width/2, 32);
//partLastGroup = physics_particle_group_end();

//instance_destroy();
var xx, yy;
for (xx = 0; xx &lt; room_width; xx+=4) {
  for (yy = 0; yy &lt; 30; yy+=4) {
    physics_particle_create(phyParticle, xx, room_height-yy, 0, 0, c_white, 1, 1)
    physics_particle_create(phyParticle, xx, room_height-yy-28, 0, 0, c_white, 1, 2)
    physics_particle_create(phyParticle, xx, room_height-yy-56, 0, 0, c_white, 1, 3)
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var count = physics_particle_count();
 var flags = phyParticle;
 /*if (count &gt; 0) 
    {
    var buffer = buffer_create(count * 12, buffer_grow, 4);
    physics_particle_get_data(buffer, flags);
    for (var n = 0; n &lt; count; n++;)
    {
       var xx = buffer_read(buffer, buffer_f32);
       var yy = buffer_read(buffer, buffer_f32);
       var argb = buffer_read(buffer, buffer_u32);
       var alpha = (argb &gt;&gt; 24) &amp; 255;
       if (instance_number(obj_bullet) &gt; 0) {
         with(obj_bullet) {
            if collision_circle(xx,yy,4,self, 0, false) {
                instance_destroy();
            }
        }
       }
    }
    buffer_delete(buffer);
    }
    */
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_number(obj_ship) &gt; 0) {
  if (obj_ship.y &gt; 600) {
    physics_particle_draw(phyParticle, 1, sprSand, 0);
    
    physics_particle_draw(phyParticle, 2, sprSand, 0);
    
    physics_particle_draw(phyParticle, 3, sprSand, 0);
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
