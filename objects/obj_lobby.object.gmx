<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_message_box</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>obj_message_box</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define box
event_inherited();
add_button(/*169.5*/0, 150, "Cancel", 1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create broadcast server to search for clients
global.Server = -1;//instance_create(0,0,oServer);
global.connectip="127.0.0.1";
global.InitObject = id;
global.haveserver = false;
global.ServerType = network_socket_tcp;

global.listzero = ds_list_create();     // we dont want to use index 0! (maps return 0 on error)
global.mapzero = ds_map_create();       // we dont want to use index 0! (maps return 0 on error)
global.serverlist = ds_list_create();
global.servernames = ds_list_create();

// Create a server and listen on our broadcast port....
global.broadcast_server = network_create_server( network_socket_udp, 6511, 1 );

is_client = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create server object
global.ServerName = global.user_name;
global.Server = instance_create(0,0,obj_server);
if( global.haveserver == false ){
    show_debug_message("Cant create server");
}else{
    global.connectip="127.0.0.1";
    network_destroy(global.broadcast_server);
    global.broadcast_server = -1;
    //Don't start game, weait for player
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start game - connect to a remote server
event_inherited()
global.ServerName = global.user_name;

network_destroy(global.broadcast_server);
global.broadcast_server = -1;

show_debug_message("#######################################");
show_debug_message("Next room");
show_debug_message("#######################################");
//Connected: transition here
if (instance_number(obj_fade_out) == 0) {
  fade_out_to_room(room_coop_survival);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (!is_client) {
  title = "Session Created";
  text = "Waiting for a player to join...";
} else {
  title_font = font_consolas_24;
  title_y_offset = -24;
  title = "Choose a Session to Join:";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (is_client) {
  var yindex = 200+yy;
  var count = ds_list_size(global.serverlist);
  if( mouse_y&gt;200 &amp;&amp; mouse_y&lt;(200+(count*50)) &amp;&amp; mouse_x &gt; view_xview[0]+(view_wview[0]*3/4)-119
         &amp;&amp; mouse_x &lt; view_xview[0]+(view_wview[0]*3/4)+9){
    var picked = floor(((mouse_y-200)/50) );
    global.connectip = ds_list_find_value(global.serverlist, picked );
    alarm[0] = 2;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// UDP server code - Detect servers "broadcast"

var eventid = ds_map_find_value(async_load, "id");

if( eventid == global.broadcast_server )
{
    var ip = ds_map_find_value(async_load, "ip");

    // incoming data for the server from a connected saocket
    var buff = ds_map_find_value(async_load, "buffer");
    name = buffer_read(buff, buffer_string );

        
    // Add to our list...if we don't already have it!
    var index = ds_list_find_index(global.serverlist, ip);
    if( index&lt;0 ){
        ds_list_add(global.serverlist, ip);
        ds_list_add(global.servernames, name);
        show_debug_message("New server found at: "+ip+"   called: "+name);
    }    
    
} 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!is_client) {
  if (global.Server != -1) {
    instance_destroy(obj_server);
  }
}

if (global.broadcast_server != -1) {
  network_destroy(global.broadcast_server);
  global.broadcast_server = false;
}

event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (is_client) {
  /*
  draw_set_color(c_black);
  draw_set_alpha(1);
  draw_set_font(font_consolas_14);
  draw_set_color(c_white);
  draw_text(10,10,"Select server");
  draw_line(10,30, room_width-10,30);
  
  var yindex = 40;
  var count = ds_list_size(global.serverlist);
  for(var i=0;i&lt;count;i++){
      draw_text(10,yindex, ds_list_find_value(global.serverlist, i)+"  "+ds_list_find_value(global.servernames, i)+"'s server" );
      yindex+=30;
  }*/
  var yindex = 200+yy;
  var count = ds_list_size(global.serverlist);
  draw_set_valign(fa_middle);
  for(var i=0;i&lt;count;i++){
      draw_sprite(spr_message_button, 0, (view_wview[0]*3/4)-64, yindex);
      draw_set_halign(fa_center);
      draw_text((view_wview[0]*3/4)-64, yindex, "Join");
      draw_set_halign(fa_left);
      draw_text((view_wview[0]/4),yindex, /*ds_list_find_value(global.serverlist, i)+"  "+*/ds_list_find_value(global.servernames, i)+"'s session" );
      yindex+=50;
  }
  draw_set_halign(fa_left);
  draw_set_valign(fa_top);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
