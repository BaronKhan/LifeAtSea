<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship_edit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ship</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
PlayerName = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement code

//for (i=0; i&lt;obj_water.nodes; i+=1)
//{
 if y &gt; 496
 //y &gt; obj_water.yy[i]
 {
  gravity = 0
  friction = 0.4
  got_oxygen_bonus = false;
  //direction = (direction+(sin(degtorad(obj_controller.dStick-direction))*12));
  
  if (!dead &amp;&amp; can_move &amp;&amp; instance_number(obj_controller) &gt; 0) {
    direction = obj_controller.dStick;
    if (super_raiyan_active) {
      new_speed = obj_controller.lStick / 9;
    }
    else {
      new_speed = obj_controller.lStick / 12;
    }
    if (got_pw &amp;&amp; alarm[8] &lt;= -1) {
      event_user(0);
    }
  }
  else if (dead || !started) {
    if (!started || (y &gt; 496 &amp;&amp; !dead_surface)) { direction = 90; }
    else if (started &amp;&amp; dead) {
      if (!dead_surface) {
        if (room != room_survival) {
          instance_create(0,0, obj_fade_out);
        }
        dead_surface = true;
      }
      direction = 165; 
    }
    new_speed = 5.33;
  } else if (getting_pw) {
    new_speed = 5.33;
    direction = point_direction(x, y, room_width/2, 380);
  }
  
  if new_speed &gt; speed
  {
   speed = new_speed
  }
  
  if (!dead &amp;&amp; can_move &amp;&amp; instance_number(obj_controller) &gt; 0) {
    if obj_controller.lStick2 != 0
    {
     image_angle = (image_angle+(sin(degtorad(obj_controller.dStick2-image_angle))*30));
    }
    else
    {
     image_angle = (image_angle+(sin(degtorad(obj_controller.dStick-image_angle))*30));
     //image_angle = direction
    }
  }
  else {
    image_angle = direction;
  }
  
  
  if (!dead) {
    x = max(0, min(x, room_width));
  }
  y = max(0, min(y, room_height));
 }
 else
 {
  if (global.pw_oxygeninst) {
    oxygen += 20;
  }
  else {
    oxygen += 1;
  }
  gravity = gravity_pull;
  hspeed += random_range(-0.01,0.01)
  friction = 0
  gravity_direction = 270
  
  //Get oxygen bonus
  if (!got_oxygen_bonus &amp;&amp; !dead &amp;&amp; can_move) {
    if (oxygen/max_oxygen &lt; 0.1) {
      add_message("Risky! +50pts");
      score += 50;
    }
    else if (oxygen/max_oxygen &lt; 0.2) {
      add_message("Close! +20pts");
      score += 20;
    }
    got_oxygen_bonus = true;
  }
  
  if (!dead &amp;&amp; can_move &amp;&amp; instance_number(obj_controller) &gt; 0) {
    if obj_controller.lStick2 != 0
    {
     image_angle = (image_angle+(sin(degtorad(obj_controller.dStick2-image_angle))*30));
    }
    else
    {
     //image_angle = (image_angle+(sin(degtorad(obj_controller.dStick-image_angle))*30));
     image_angle = direction
    }
  }
  else if (dead) {
    image_angle = direction;
    if (y &gt; 490 &amp;&amp; dead_surface) { direction = 165; }
    else
    {
      if (!dead_surface) {
        if (room != room_survival) {
          instance_create(0,0, obj_fade_out);
        }
        dead_surface = true;
        direction = 165;
      }
      
      gravity = gravity_pull;
    }
    new_speed = 5.33;
  } else if (getting_pw) {
    if (y &lt; 410 &amp;&amp; !pw_out_of_water) {
      pw_out_of_water = true;
      gravity = 0;
      hspeed = 0;
      vspeed = 0;
      pw_x = x;
      pw_y = y - 16;
      pw_angle = 270;
      instance_create(pw_x, pw_y, obj_lightning_pw);
      alarm[6] = room_speed*2.5;
      alarm[9] = room_speed;
    } else if (pw_out_of_water) {
      pw_angle = (pw_angle-8) % 360;
      x = pw_x + lengthdir_x(16, pw_angle);
      y = pw_y + lengthdir_y(16, pw_angle);
      hspeed = 0;
      vspeed = 0;
    } else {
      gravity = gravity_pull;
    }
  }
  
  if (instance_number(obj_controller)) &gt; 0 {
    obj_controller.dStick = direction
  }
 
  if (!dead) { x = max(0, min(x, room_width)); }
  y = max(0, min(y, room_height));
  if speed &gt; max_speed
  {
   speed = max_speed
  }
 }
//}
 
//Shooting timer

//Old timer
/*if obj_controller.lStick2 != 0 &amp;&amp; !dead
{
 if alarm[0] = -1
 {
  alarm[0] = 2
 }
}*/

if (instance_number(obj_controller) &gt; 0) {
  if (obj_controller.lStick2 != 0 || (!global.dual_controls &amp;&amp; locked)) &amp;&amp; !dead &amp;&amp; can_move
  {
   if alarm[0] = -1
   {
    if (room != room_survival || super_raiyan_active) {
     alarm[0] = 2;
    } else {
     var sea_half_height = (room_height - 496)/4;
     bullet_timer_max = 30/global.pw_bullet_speed;
     bullet_timer = floor(max(2, min(max(0, 496+sea_half_height-y)*bullet_timer_max/sea_half_height, bullet_timer_max)));
     alarm[0] = floor(max(2, min(max(0, 496+sea_half_height-y)*bullet_timer_max/sea_half_height, bullet_timer_max)));
    }
   }
  }
}

//Set water physics
xsp = hspeed
ysp = vspeed


//Limit direction between 0 and 360
// (WTF??? I would not type this now)

if direction &gt; 360
{
 offset = direction - 360
 direction = offset
}

if direction &lt; 0
{
 offset = 0 - direction
 direction = 360 - offset
}



//Limit image_angle between 0 and 360
// (Again, I would not type this now)

if image_angle &gt; 360
{
 offset = image_angle - 360
 image_angle = offset
}

if image_angle &lt; 0
{
 offset = 0 - image_angle
 image_angle = 360 - offset
}


//Deform sprite
/*if (speed &lt; 4 || speed = 4)
{
 if abs(direction-image_angle) &lt; 90 || abs(direction-image_angle) &gt; 270
 {
  image_speed = 0
  sprite_index = spr_ship_edit     //&lt;---------------------EDIT!!!!!!!!
  image_index = floor((speed/4)*14)
 }
 else
 {
  image_speed = 0
  sprite_index = spr_ship_edit     //&lt;---------------------EDIT!!!!!!!!
  image_index = 0
 }
}
else
{
 if abs(direction-image_angle) &lt; 90  || abs(direction-image_angle) &gt; 270
 {
  if sprite_index = spr_ship_edit
  {
   sprite_index = spr_player_fast
   image_index = 0
  }
  image_speed = 0.25 * ((speed-4)/0.93)
 }
 else
 {
 // if abs(direction-image_angle) &lt; 355
 // {
   image_speed = 0
   if sprite_index = spr_player_fast
   {
    sprite_index = spr_ship_edit     //&lt;---------------------EDIT!!!!!!!!
   }
   image_index = 0
//  }
 }
}*/

if (abs(direction-image_angle) &gt; 1)
{
  image_index = 0
}



//Auto-aim

ne = 0
locked = false

if (instance_number(obj_controller) &gt; 0 &amp;&amp; instance_number(par_enemy) &gt; 0) {
  if (obj_controller.lStick2 != 0 || !global.dual_controls) &amp;&amp; !dead &amp;&amp; can_move
  {
   ne = instance_nearest(x+lengthdir_x(200,image_angle),y+lengthdir_y(200,image_angle),par_enemy)
   if abs(x-ne.x) &lt; 480 &amp;&amp; abs(y-ne.y) &lt; 270
   {
    //if point_direction(x,y,ne.x,ne.y) &lt; obj_controller.dStick2+90 &amp;&amp; point_direction(x,y,ne.x,ne.y) &gt; obj_controller.dStick2-90
    if (!global.dual_controls ||
        abs(point_direction(x,y,ne.x,ne.y) - obj_controller.dStick2) &lt; 90 || abs(point_direction(x,y,ne.x,ne.y) - obj_controller.dStick2) &gt; 270)
    {
     locked = true
     if (ne.object_index == obj_enemy_shark || ne.object_index == obj_boss_shark
          || ne.object_index == obj_large_shark) {
      if (ne.state == SHARK_DIE || ne.state == SHARK_DEAD) {
        locked = false;
      }
     }
     if (ne.object_index == obj_final_boss) {
      if (ne.state == RAY_DM_PREP || ne.state == RAY_DEAD || ne.state == RAY_DEAD_FALL) {
        locked = false;
      }
     }
     if (locked) {
      new_angle = point_direction(x,y,ne.x,ne.y)
      image_angle = (image_angle+(sin(degtorad(new_angle-image_angle))*50));
     }
    }
   }
  }
}


/* DRAFT 3
if obj_controller.lStick2 != 0
{
 ne = instance_nearest(x+lengthdir_x(200,image_angle),y+lengthdir_y(200,image_angle),par_enemy)
 if point_distance(x,y,ne.x,ne.y) &lt; 551
 {
  //if point_direction(x,y,ne.x,ne.y) &lt; obj_controller.dStick2+90 &amp;&amp; point_direction(x,y,ne.x,ne.y) &gt; obj_controller.dStick2-90
  if abs(point_direction(x,y,ne.x,ne.y) - obj_controller.dStick2) &lt; 90 || abs(point_direction(x,y,ne.x,ne.y) - obj_controller.dStick2) &gt; 270
  {
   new_angle = point_direction(x,y,ne.x,ne.y)
   image_angle = (image_angle+(sin(degtorad(new_angle-image_angle))*50));
   locked = true
  }
 }
}

*/

/* DRAFT 2
if obj_controller.lStick2 != 0
{
 ne = instance_nearest(x+lengthdir_x(250,image_angle),y+lengthdir_y(250,image_angle),par_enemy)
 if point_direction(x,y,ne.x,ne.y) &lt; obj_controller.dStick2+90 &amp;&amp; point_direction(x,y,ne.x,ne.y) &gt; obj_controller.dStick2-90 &amp;&amp; point_distance(x,y,ne.x,ne.y) &lt; 551
 {
  new_angle = point_direction(x,y,ne.x,ne.y)
  image_angle = (image_angle+(sin(degtorad(new_angle-image_angle))*50));
  locked = true
 }
}
*/


/* DRAFT 1
if obj_controller.lStick2 != 0
{
 ne = instance_nearest(x+lengthdir_x(250,image_angle),y+lengthdir_y(250,image_angle),par_enemy)
 if point_direction(x,y,ne.x,ne.y) &lt; image_angle+45 &amp;&amp; point_direction(x,y,ne.x,ne.y) &gt; image_angle-45 &amp;&amp; point_distance(x,y,ne.x,ne.y) &lt; 551
 {
  new_angle = point_direction(x,y,ne.x,ne.y)
  image_angle = (image_angle+(sin(degtorad(new_angle-image_angle))*50));
  locked = true
 }
}
*/

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create trail
/*
_partabc_dirmn=direction-180
_partabc_dirmx=direction-180
part_type_direction(_partabc,_partabc_dirmn,_partabc_dirmx,_partabc_diric,_partabc_dirwg)
if speed &gt; 4 &amp;&amp; y &gt; 496
{
part_emitter_region(_sysabc,_emiabc,x-_emiabc_radius,x+_emiabc_radius,y-_emiabc_radius,y+_emiabc_radius,_emiabc_shape,_emiabc_distr)
part_emitter_burst(_sysabc,_emiabc,_partabc,_partabc_count)
}

*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create y-offset for the floaty effect and wiggle-offset when moving
if speed &lt; 0.5
{
  if y_add = false
   yy -= 0.1
  if y_add = true
   yy += 0.1

  if yy &gt; 4
  {
   yy = 4
   y_add = false
  }

  if yy &lt; -4 
  {
   yy = -4
   y_add = true
  }
 
  if wiggle_offset != 0
  {
    if wiggle_offset &gt; 0
      wiggle_offset -= 0.1
    else
      wiggle_offset += 0.1
  }
}
else
{
  if yy != 0
  {
    if yy &gt; 0
      yy -= 0.1
    else
      yy += 0.1
  }
  
  if (y &gt; 496 &amp;&amp; speed &gt; 0.5)
  {
    if wiggle_add = false
      wiggle_offset -= 0.2
    if wiggle_add = true
      wiggle_offset += 0.2
  
    if wiggle_offset &gt; 2
    {
      wiggle_offset = 2
      wiggle_add = false
    }
  
    if wiggle_offset &lt; -2
    {
      wiggle_offset = -2
      wiggle_add = true
    }
  }
  /*else
  {
    if wiggle_offset != 0
    {
      if wiggle_offset &gt; 0
        wiggle_offset -= 0.2
      else
        wiggle_offset += 0.2
    }
  }*/

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animate eyes

eye_image += eye_inc

if eye_image &gt; 16
{
 eye_image = 0
}

if round(eye_image) &lt; 16
{
 eye_inc = random(0.1)
}
else
{
 eye_inc = 0.2
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clamp oxygen value
oxygen = clamp(oxygen, 0, max_oxygen)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update physics
update_physics();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check oxygen
if (oxygen &lt;= 0 &amp;&amp; can_move) {
  dead = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check combo count
if (combo_count &gt; 2) {
  if (can_get_no_hit_3) {
    add_message("No hit 3x: +50pts");
    score += 50;
    can_get_no_hit_3 = false;
  }
  if (combo_count &gt; 4) {
    add_message("No hit 5x: +300pts");
    score += 300;
    if ((global.pw_super_raiyan &gt; 0)) {
      if (!super_raiyan_active) {
        if (!super_raiyan_available) {
          super_raiyan_available = true;
          add_message("Super Raiyan form available");
        }
      } else {
        add_message("Super Raiyan form: +"+string(2*global.pw_super_raiyan)+"s");
        alarm[5] += room_speed*(2*global.pw_super_raiyan);
      }
    }
    combo_count = 0;
    can_get_no_hit_3 = true;
  }
} else {
  can_get_no_hit_3 = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check super raiyan availability
if (super_raiyan_available &amp;&amp; (!super_raiyan_active) &amp;&amp; instance_number(obj_controller) &gt; 0) {
  for (i=0; i&lt;5; i+=1)
  {
    if (device_mouse_check_button_pressed(i, mb_left))
    {
      /*if ((device_mouse_x(i) &gt; view_xview + view_wview-96)
          &amp;&amp; (device_mouse_x(i) &lt; view_xview +view_wview-32)
          &amp;&amp; (device_mouse_y(i) &gt; view_yview + (view_hview/2)-42)
          &amp;&amp; (device_mouse_y(i) &lt; view_yview + (view_hview/2)+22)
          )
      {
        super_raiyan_available = false;
        super_raiyan_active = true;
        event_user(1);

        alarm[5] = room_speed*10+(2*global.pw_super_raiyan);
      }*/
      if (device_mouse_on_button(view_xview[0]+480, view_yview[0]+508+obj_controller.raiyan_y, i))
      {
        super_raiyan_available = false;
        super_raiyan_active = true;
        event_user(1);

        alarm[5] = room_speed*10+(2*global.pw_super_raiyan);
      }
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Super raiyan perks
if (super_raiyan_active) {
  oxygen = max_oxygen;
  part_emitter_region(_systemabc,_emitterabc,x-20,x+20,y-20,y+20,ps_shape_ellipse,ps_distr_linear)
  part_emitter_burst(_systemabc,_emitterabc,_particleabc,3);
}

//Reset perks in alarm[5]
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change colour when getting power up
if (getting_pw &amp;&amp; pw_out_of_water) {
  player_white_grad = min(player_white_grad+0.03, 1);
} else {
  player_white_grad = max(player_white_grad-0.03, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>0</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>35,35</point>
    <point>35,35</point>
  </PhysicsShapePoints>
</object>
