<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>msk_boss_bubble</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>msk_boss_bubble</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate outline
    waterdiameter = 360   //376
    //waterheight = room_height - y;
    waterradius = 256
    if (global.lower_performance) {
      nodewidth = 4;
      nodes = floor(waterdiameter/nodewidth)+1;
    }
    else {
      nodewidth = 4; //as this is lowered the water waves will get thinner but more precise, and more of them
      nodes = floor(waterdiameter/nodewidth)+1;
    }

    //physics variables
    spring = 4; //higher numbers will make the liquid act thicker
    fricdiv = 12; //higher numbers will be less dynamic
    
    //individual nodes
    for (i = 0; i &lt; nodes; i += 1)
    {
        xx[i] = x;
        xxsp[i] = 0; 
        yy[i] = y;
        yysp[i] = 0;
        frc[i] = (yysp[i])/(room_speed/fricdiv);
    }
    

move = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise bullet pattern

//bhpg_pattern_init(1,90,65,1,40,90,0,1,90,50,1,1,0,0);
//bhpg_pattern_init(2,90,65,1,90,90,0,2,90,75,1,1,0,0);
bhpg_pattern_init(5,90,135,10,315,0,0,0,30,12/*4*/,256,256,-128,-128);

bhpg_bullet_init(obj_bullet_enemy,3,-0.05,0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set bubble width
bubble_width = 8;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade in
fade_in = true;
bubble_alpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Restore bubble width
bubble_width = min(8, bubble_width+0.02);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Outline
if (instance_number(obj_physics) &gt; 0)
{
    var drop; 
    for (i = 0; i &lt; nodes; i += 1)
    {
        //if ((i-1 &gt; -1) &amp;&amp; (i+1 &lt; nodes))
        {
            
            node_prev_index = (i+nodes-1)%nodes;
            node_after_index = (i+nodes+1)%nodes;
            
            xxsp[i] += ((((xx[node_prev_index]-xx[i])+(xx[node_after_index]-xx[i]))+(xxsp[node_prev_index]+xxsp[node_after_index])))/(room_speed*spring);
            xxsp[i] += (x-xx[i])/(room_speed*spring);
            frc[i] = (xxsp[i])/(room_speed/fricdiv);
            xxsp[i] -= frc[i];
            
            yysp[i] += ((((yy[node_prev_index]-yy[i])+(yy[node_after_index]-yy[i]))+(yysp[node_prev_index]+yysp[node_after_index])))/(room_speed*spring);
            yysp[i] += (y-yy[i])/(room_speed*spring);
            frc[i] = (yysp[i])/(room_speed/fricdiv);
            yysp[i] -= frc[i];
            
            //collision
            drop = collision_circle(lengthdir_x(waterradius, i*nodewidth)+xx[i], lengthdir_y(waterradius, i*nodewidth)+yy[i], nodewidth/2, obj_physics, 0, 1);
            if (drop)
            {
                if (abs(drop.xsp) &gt; 0.5)
                {
                    xxsp[i] = divide(drop.xsp/4, max(1, point_distance(drop.x, y, x+lengthdir_x(waterradius, i*nodewidth), y)/16));
                }
                
                if (abs(drop.ysp) &gt; 0.5)
                {
                    yysp[i] = divide(drop.ysp/4, max(1, point_distance(x, drop.y, x, y+lengthdir_y(waterradius, i*nodewidth))/16));
                }

            }

            //actually move the node
            //if !(collision_circle(x+(i*nodewidth), yy[i], nodewidth/2, obj_wavecreate, 0, 1) &amp;&amp; ((ysp[i] &gt; 2 &amp;&amp; (yy[i] &lt; -4 || yy[i] &gt; 4)) || (ysp[i] &lt; -2 &amp;&amp; (yy[i] &gt; 4 || yy[i] &lt; -4)))) 
            //{
             xx[i] += xxsp[i]
             yy[i] += yysp[i];
            //}
            
        }
    }
    

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Follow amoeba
if (instance_number(obj_boss_amoeba) &gt;0) {
  x = obj_boss_amoeba.x;
  y = obj_boss_amoeba.y;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Physics
update_physics();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
///If thin bubble
if (bubble_width &lt;= 0.5) {
  instance_create(x,y,obj_explode_512);
  instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade in
if (fade_in) {
  bubble_alpha += 0.0125;
  if (bubble_alpha &gt; 1) {
    bubble_alpha = 1;
    fade_in = false;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (distance_to_object(other) &lt; 250) {
  with (other) {
    instance_destroy();
  }
}
with (other)
{
  ne = 0;
  direction = random_range(direction+90, direction+270);
  image_angle = direction;
}

bubble_width -= 0.04;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw outline
if (instance_number(obj_ship) &gt; 0) {

        //draw the water's body
    //draw_set_color(18577);
    draw_set_colour(make_colour_rgb(0,30,30))
    draw_set_alpha(bubble_alpha);
    draw_set_blend_mode(bm_normal);
    draw_primitive_begin(pr_trianglestrip);
    
    for (i = 0; i &lt; nodes; i += 1)
    {
   // gradient += 2
    //draw_set_color(18577+( sin(degtorad(gradient))*50 ) );
      if (i == nodes-1) {
        draw_vertex(xx[0]+lengthdir_x(waterradius, i*nodewidth), yy[0]+lengthdir_y(waterradius, i*nodewidth));
        draw_vertex(xx[0]+lengthdir_x(waterradius-bubble_width, i*nodewidth), yy[0]+lengthdir_y(waterradius-bubble_width, i*nodewidth));
      } else {
        draw_vertex(xx[i]+lengthdir_x(waterradius, i*nodewidth), yy[i]+lengthdir_y(waterradius, i*nodewidth));
        draw_vertex(xx[i]+lengthdir_x(waterradius-bubble_width, i*nodewidth), yy[i]+lengthdir_y(waterradius-bubble_width, i*nodewidth));
      }
        //draw_line_width(x+(i*nodewidth),y+399,x+(i*nodewidth),room_height,nodewidth)
    }
    //draw_rectangle(x,y+400,x+waterwidth,room_height,false)
    
    draw_primitive_end();

    
    draw_set_alpha(1);
    draw_set_blend_mode(bm_normal);
    draw_set_color(c_white);
    
    //draw the water's surface
    /*
    var pth, wid, stp, stp_i, xt, xt_i, sgn, a, a_i, x1, y1, x2, y2, i, px, py, nx, ny, vert_count;
    
    wid = 4; //half the width of water surface
    
    px = x;
    py = yy[0];
    
    vert_count = 0;
    draw_primitive_begin_texture(pr_trianglestrip, sprite_get_texture(sprWaterTop, 0));
    
    for (i = 0; i &lt; nodes; i += 1) 
    {

        nx = x+(i*nodewidth);
        ny = yy[i];

        dir = point_direction(px, py, nx, ny);
        dx = lengthdir_x(wid, dir+90);
        dy = lengthdir_y(wid, dir+90);

        xt = (i-1)/nodes;
        draw_vertex_texture(px+dx, py+dy, xt, 0);
        draw_vertex_texture(px-dx, py-dy, xt, 1);
        px = nx;
        py = ny;
    }
    
    draw_vertex_texture(px+dx, py+dy, xt, 0);
    draw_vertex_texture(px-dx, py-dy, xt, 1);
    draw_primitive_end();
    */
  draw_set_color(c_black)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>-1</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>256,256</point>
    <point>256,16</point>
  </PhysicsShapePoints>
</object>
