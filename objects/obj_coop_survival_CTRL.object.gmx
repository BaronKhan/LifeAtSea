<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play music
if (global.play_music &amp;&amp; !audio_is_playing(mus_story)) {
  audio_play_sound(mus_story, 10, true);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise survival state
if (!global.haveserver) {
  instance_destroy();
  instance_create(x,y, obj_fade_in);
  exit;
}

max_enemies = 3;
global.multiplier = 1;
current_multiplier = global.multiplier;
level = 0;
level_changed = false;
alarm[0] = room_speed*0.5;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup player and room
instance_create(0,0, obj_fade_in);
if (instance_number(obj_ship) &gt; 0) {
  obj_ship.x = (room_width/2)-128;
  obj_ship.y = 650;
  obj_ship.started = false;
  obj_ship.can_move = false;
}
if (instance_number(obj_ship_coop) &gt; 0) {
  obj_ship_coop.x = (room_width/2)+128;
  obj_ship_coop.y = 650;
  obj_ship_coop.started = false;
  obj_ship_coop.can_move = false;
}
fade_out3 = false;
game_over = false;
started1 = false;
started2 = false;
game_over_xx = 2000;
game_over_hsp = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add enemy
level = floor(score/200);
global.multiplier = floor(score/1250)+1;
if (current_multiplier &lt; global.multiplier) {
  current_multiplier = global.multiplier;
  add_message("Danger Level: "+string(global.multiplier)+"x");
}
max_enemies = max(3, min(floor(score/250), 80));
num_enemies = instance_number(par_enemy);
added_enemy = false;
if (num_enemies &lt; max_enemies) {
  dice = irandom(3);
  switch(dice)
  {
    case 0:
      //use different sharks at each level
      if (level &gt; 20) { added_enemy = add_enemy(obj_boss_shark); }
      else if (level &gt; 10) { added_enemy = add_enemy(obj_large_shark); }
      else { added_enemy = add_enemy(obj_enemy_shark); }
      break;
    case 1:
      added_enemy = add_enemy(obj_enemy_fork);
      break;
    case 2:
      if (level &gt; 10) { added_enemy = add_enemy(obj_enemy_knife)}
      break;
    case 3:
      if (level &gt; 30) { added_enemy = add_enemy(obj_enemy_battleship)}
      break;
  }
}
else {
  added_enemy = true;
}

if (added_enemy) {
  alarm[0] = room_speed;
}
else {
  alarm[0] = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set player ship
if (instance_number(obj_ship) &gt; 0) {
  if (!started1 &amp;&amp; obj_ship.y &lt; 400) {
    started1 = true;
    obj_ship.can_move = true;
    obj_ship.started = true;
  }
}

if (instance_number(obj_ship_coop) &gt; 0) {
  if (!started2 &amp;&amp; obj_ship_coop.y &lt; 400) {
    started2 = true;
    obj_ship_coop.can_move = true;
    obj_ship_coop.started = true;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw game over
if (game_over) {
  if (!fade_out3) {
    game_over_xx -= point_distance(game_over_xx, 0, 384, 0)/70;
  } else {
    game_over_hsp += min(game_over_hsp + point_distance(game_over_xx, 0, -480, 0)/280, 2.5);
    game_over_xx -= min(game_over_hsp, 15);
  }
  
  
  draw_set_colour(c_white);
  draw_set_font(font_kristen_32);
  draw_set_halign(fa_center);
  draw_set_valign(fa_middle);
  draw_set_alpha(1);
  draw_text(game_over_xx, (view_hview[0]/2), "Game Over ~ Out of Oxygen");
  draw_set_halign(fa_left);
  draw_set_valign(fa_top);
  draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
