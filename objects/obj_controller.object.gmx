<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise Joystick Variables
//joystick

xJoy = 160  //474 for centre
yJoy = 420
rJoy = 64;  //the diameter : 2

xStick = 0;
yStick = 0;
rStick = 32;
dStick = 0; //the direction
lStick = 0  //the length (speed of plane)


//2nd stick
xJoy2 = 788
yJoy2 = 420
rJoy2 = 64;  //the diameter : 2

xStick2 = 0;
yStick2 = 0;
rStick2 = 32;
dStick2 = 0; //the direction
lStick2 = 0  //the length (speed of plane)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wind alarm
alarm[0] = random_range(room_speed*3, room_speed*15);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Minimap alpha
decrease_alpha = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise score
score = 0;
current_score = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Score alpha
decrease_score_alpha = 0;

score_settled = true;
score_scale = 1;
score_scale_inc = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise message system
for (i=0; i&lt;5;++i) {
  messages[i] = "";
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init power bar
slider_alpha = 0.0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init average fps
fps_average = 0;
fps_count = 0;
alarm[2] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get display scale
scale = display_get_gui_width()/960;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set GUI size
display_set_gui_size(view_wview[0], view_hview[0]);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init raiyan button
raiyan_y = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get average fps
fps_average = ((fps_average*fps_count)+fps)/(fps_count+1);
fps_count += 1;
alarm[2] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset message system
for (i=0; i&lt;5;++i) {
  messages[i] = "";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create wind
if (instance_number(par_wind) &lt; 1) {
  wind_num = floor(random(5))
  switch(wind_num) {
    case 0:
      instance_create(0,0, obj_wind1);
      break;
    case 1:
      instance_create(0,0, obj_wind2);
      break
    case 2:
      instance_create(0,0, obj_wind3);
      break
    case 3:
      instance_create(0,0, obj_wind4);
      break
    case 4:
      instance_create(0,0, obj_wind5);
      break
    default:
      instance_create(0,0, obj_wind1);
      break;
  }
}


alarm[0] = random_range(room_speed*3, room_speed*15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset sticks
    xStick = 0;
    yStick = 0;
    lStick = 0;
    xStick2 = 0;
    yStick2 = 0;
    lStick2 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the Virtual Sticks
for (i=0; i&lt;5; i+=1)
{
if device_mouse_check_button(i, mb_left)
{
if (!global.dual_controls || device_mouse_x(i) &lt; view_xview + (view_wview/2))
{
lStick = point_distance(view_xview + xJoy, view_yview + yJoy, device_mouse_x(i), device_mouse_y(i));
if lStick &lt; rJoy * 5 {
    lStick = min(rJoy, lStick);
    dStick = point_direction(view_xview + xJoy, view_yview + yJoy, device_mouse_x(i), device_mouse_y(i));
    xStick = lengthdir_x(lStick, dStick);
    yStick = lengthdir_y(lStick, dStick);
}; else {
    xStick = 0;
    yStick = 0;
    lStick = 0;
};
}
else if (global.dual_controls)
{
 lStick2 = point_distance(view_xview + xJoy2, view_yview + yJoy2, device_mouse_x(i), device_mouse_y(i));
if lStick2 &lt; rJoy2 * 5 {
    lStick2 = min(rJoy2, lStick2); //use this, otherwise char dir resets
    //lStick2 = 64;
    dStick2 = point_direction(view_xview + xJoy2, view_yview + yJoy2, device_mouse_x(i), device_mouse_y(i));
    xStick2 = lengthdir_x(lStick2, dStick2);
    yStick2 = lengthdir_y(lStick2, dStick2);
}; else {
    xStick2 = 0;
    yStick2 = 0;
    lStick2 = 0;
};
}
}


//Check pause button
if (room != room_coop_test &amp;&amp; room != room_coop_survival) {
  if (device_mouse_check_button_pressed(i, mb_left)) {
    if (device_mouse_x(i) &gt; view_xview[0]+view_wview[0]-56 &amp;&amp; device_mouse_x(i) &lt; view_xview[0]+view_wview[0]-16 &amp;&amp;
          device_mouse_y(i) &gt; view_yview[0]+116 &amp;&amp; device_mouse_y(i) &lt; view_yview[0]+148) {
      instance_create(x,y,obj_pause_menu);
    }
  }
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset 2nd view
view_xview[1] = view_xview[0]
view_yview[1] = view_yview[0]
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set minimap alpha
if (instance_number(par_enemy) &gt; 0) {
  found = false;
  with (par_enemy) {
    obj_controller.found |= point_in_rectangle(x, y, view_xview+view_wview-150, view_yview, view_xview + view_wview, view_yview + 150);
  }
  if (found) {
    decrease_alpha += 0.004;
  }
  else {
    decrease_alpha -= 0.004;
  }
}
else {
  decrease_alpha -= 0.004;
}

decrease_alpha = clamp(decrease_alpha, 0, 0.3);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set score alpha
if (instance_number(par_enemy) &gt; 0) {
  found_enemy = false;
  with (par_enemy) {
    obj_controller.found_enemy |= point_in_rectangle(x, y, view_xview, view_yview, view_xview + 200, view_yview + 250);
  }
  if (found_enemy) {
    decrease_score_alpha += 0.008;
  }
  else {
    decrease_score_alpha -= 0.008;
  }
}
else {
  decrease_score_alpha -= 0.008;
}

decrease_score_alpha = clamp(decrease_score_alpha, 0, 0.5);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update score
score_diff = score - current_score;
if (score_diff &gt; 1000) {
  current_score += 1000;
}
else if (score_diff &gt; 100) {
  current_score += 100;
}
else if (score_diff &gt; 10) {
  current_score += 10;
}
else if score_diff &gt; 0{
  current_score += 1;
}

if (score != current_score) {
  if (score_settled) {
    score_settled = false;
    score_scale_inc = true;
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Adjust score size
if (!score_settled) {
  if (score_scale_inc) {
    score_scale += 0.01;
  }
  else {
    score_scale -= 0.01;
  }
  if (score_scale &gt; 1.2) {
    score_scale_inc = false;
  }
  else if (score_scale &lt; 1) {
    score_scale = 1;
    if (score == current_score) {
      score_settled = true;
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Joysticks

//draw joy
draw_set_alpha(0.5);
draw_circle_color(xJoy/**scale*/, yJoy/**scale*/, rJoy/**scale*/, c_gray, c_dkgray, 0);
draw_line_color(xJoy/**scale*/,yJoy/**scale*/,(xJoy + xStick)/**scale*/,(yJoy + yStick)/**scale*/,c_black,c_black)
//draw stick
draw_set_alpha(1);
draw_circle_color((xJoy + xStick)/**scale*/, (yJoy + yStick)/**scale*/, rStick/**scale*/, c_white, c_silver ,0)
//draw circle area
//draw_circle(view_xview + xJoy, view_yview + yJoy, rJoy * 2, 1);


//draw 2nd joy
if (global.dual_controls) {
  draw_set_alpha(0.5);
  draw_circle_color(xJoy2/**scale*/, yJoy2/**scale*/, rJoy2/**scale*/, c_gray, c_dkgray, 0);
  draw_line_color(xJoy2/**scale*/,yJoy2/**scale*/,(xJoy2 + xStick2)/**scale*/,(yJoy2 + yStick2)/**scale*/,c_black,c_black)
  //draw stick
  draw_set_alpha(1);
  draw_circle_color((xJoy2 + xStick2)/**scale*/, (yJoy2 + yStick2)/**scale*/, rStick2/**scale*/, c_white, c_silver ,0)
  //draw circle area
  //draw_circle(view_xview + xJoy2, view_yview + yJoy2, rJoy2 * 2, 1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw mini map
var scale_ = scale;
old = draw_get_colour()
draw_set_alpha(0.1 - decrease_alpha);

var mapx = (view_wview[0]-132)/**scale*/;
var mapy = 0;
var mapwidth = 100/**scale*/;
var mapheight = 100/**scale*/;

draw_set_colour(c_gray);
draw_rectangle(mapx, mapy+16, mapx+mapwidth, mapy+(496/room_height)*mapheight, false);

draw_set_colour(c_navy);
draw_rectangle(mapx, mapy+(496/room_height)*mapheight, mapx+mapwidth, mapy+mapheight, false);

draw_set_alpha(0.5 - decrease_alpha);
var u,v,xx,yy;
with(par_enemy)
{
  u = x/room_width;
  v = y/room_height;
  if (u &lt;= 1 &amp;&amp; v &lt;= 1 &amp;&amp; u &gt;= 0 &amp;&amp; v &gt;= 0) {
    xx = mapx+u*mapwidth;
    yy = mapy+v*mapheight;
    draw_set_color(c_red);
    if (object_is_ancestor(object_index, par_boss)) {
      draw_circle(xx, yy, 8/**scale_*/, false);
    } else {
      draw_circle(xx, yy, 2/**scale_*/, false);
    }
  }
}

with(obj_ship)
{
  u = x/room_width;
  v = y/room_height;
  if (u &lt;= 1 &amp;&amp; v &lt;= 1 &amp;&amp; u &gt;= 0 &amp;&amp; v &gt;= 0) {
    xx = mapx+u*mapwidth;
    yy = mapy+v*mapheight;
    draw_set_color(c_black)
    draw_circle(xx, yy, 4/**scale_*/, false);
  }
}

with(obj_ship_coop)
{
  u = x/room_width;
  v = y/room_height;
  if (u &lt;= 1 &amp;&amp; v &lt;= 1 &amp;&amp; u &gt;= 0 &amp;&amp; v &gt;= 0) {
    xx = mapx+u*mapwidth;
    yy = mapy+v*mapheight;
    draw_set_color(c_black)
    draw_circle(xx, yy, 4/**scale_*/, false);
  }
}


draw_set_alpha(1);
draw_set_color(old);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw score
old = draw_get_colour();
draw_set_colour(c_white);
draw_set_font(font_kristen_48);
draw_set_alpha(1-decrease_score_alpha);
draw_text_transformed(32/**scale*/, 56/**scale*/, string(current_score), score_scale/**scale*/, score_scale/**scale*/, draw_get_alpha());
draw_set_colour(old);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw super raiyan button
//if (instance_number(obj_ship) &gt; 0)
//{
//  if (obj_ship.super_raiyan_available) {
//    draw_rectangle_colour(((view_wview)-96)/**scale*/,
//                          ((view_hview/2)-42)/**scale*/,
//                          ((view_wview)-32)/**scale*/,
//                          ((view_hview/2)+22)/**scale*/,
//                          c_yellow, c_orange, c_white, c_yellow, true);
//    draw_sprite(spr_aura, -1, ((view_wview)-64)/**scale*/,((view_hview/2)-10)/**scale*/)
//  }
//}

//draw_set_colour(c_black);

if (instance_number(obj_ship) &gt; 0) {
  if (obj_ship.super_raiyan_available) {
    raiyan_y = tune_value(raiyan_y, 0, 2);
  } else {
    raiyan_y = 60;
  }
  draw_sprite(spr_message_button, 0, 480, 508+raiyan_y);
  draw_set_font(font_consolas_14);
  draw_set_halign(fa_center);
  draw_set_valign(fa_middle);
  draw_text(480, 508+raiyan_y, "Super")
  draw_set_halign(fa_left);
  draw_set_valign(fa_top);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw pause button
if (room != room_coop_test &amp;&amp; room != room_coop_survival) {
  draw_set_alpha(0.5);
  draw_sprite(spr_pause_button, -1, 920, 132);
  draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw messages
draw_set_font(font_consolas_14);
draw_set_colour(c_white);
for (i = 0; i &lt; 5; ++i) {
  draw_set_alpha(1-decrease_score_alpha);
  draw_text_transformed(32/**scale*/, (100+(20*i))/**scale*/, messages[i], 1/**scale*/, 1/**scale*/, 0);
}
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw power bar (TO FIX)
var ww = display_get_gui_width();
var hh = display_get_gui_height();
if (instance_number(obj_ship) &gt; 0 &amp;&amp; room==room_survival) {

//var bullet_timer = obj_ship.bullet_timer;
var bullet_timer_max = obj_ship.bullet_timer_max - 2;
var sea_half_height = (room_height - 496)/4;
var bullet_timer = max(2, min(max(0, 496+sea_half_height-obj_ship.y)*bullet_timer_max/sea_half_height, bullet_timer_max)) - 2;

    draw_set_alpha(min(0.2,slider_alpha));
    for(i=0; i &lt; round(hh/5); i+=1) //2.11
    {
        draw_line(0,(hh*2/5)+i,power(i/(ww/27.4),3)+3,(hh*2/5)+i);
    }
    //draw zero line
    draw_line(0,(hh*2/5)-1, ww/20 , (hh*2/5)-1);
    
    draw_set_color(c_black);
    draw_set_alpha(slider_alpha*4);
    draw_line_width(0,(hh*3/5)-((bullet_timer/bullet_timer_max)*(hh/5)), ww/19 , (hh*3/5)-((bullet_timer/bullet_timer_max)*(hh/5)),4);
    draw_set_color(c_white);


if (!global.dual_controls || lStick2 != 0) //TODO: only when started
{
    if slider_alpha &lt; 0.4
    {
            slider_alpha += 0.01;
    }
}
else
{
    if slider_alpha &gt; -0.2
    {
        slider_alpha -=0.01;
    }
}

}
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Joysticks (OLD)
/*
//draw joy
draw_set_alpha(0.5);
draw_circle_color(view_xview + xJoy, view_yview + yJoy, rJoy, c_gray, c_dkgray, 0);
draw_line_color(view_xview + xJoy,view_yview + yJoy,view_xview + xJoy + xStick,view_yview + yJoy + yStick,c_black,c_black)
//draw stick
draw_set_alpha(1);
draw_circle_color(view_xview + xJoy + xStick, view_yview + yJoy + yStick, rStick, c_white, c_silver ,0)
//draw circle area
//draw_circle(view_xview + xJoy, view_yview + yJoy, rJoy * 2, 1);


//draw 2nd joy
if (global.dual_controls) {
  draw_set_alpha(0.5);
  draw_circle_color(view_xview + xJoy2, view_yview + yJoy2, rJoy2, c_gray, c_dkgray, 0);
  draw_line_color(view_xview + xJoy2,view_yview + yJoy2,view_xview + xJoy2 + xStick2,view_yview + yJoy2 + yStick2,c_black,c_black)
  //draw stick
  draw_set_alpha(1);
  draw_circle_color(view_xview + xJoy2 + xStick2, view_yview + yJoy2 + yStick2, rStick2, c_white, c_silver ,0)
  //draw circle area
  //draw_circle(view_xview + xJoy2, view_yview + yJoy2, rJoy2 * 2, 1);
}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw mini map (OLD)
/*
old = draw_get_colour()
draw_set_alpha(0.1 - decrease_alpha);

var mapx = view_xview[0]+view_wview[0]-132;
var mapy = view_yview[0];
var mapwidth = 100;
var mapheight = 100;

draw_set_colour(c_gray);
draw_rectangle(mapx, mapy+16, mapx+mapwidth, mapy+(496/room_height)*mapheight, false);

draw_set_colour(c_navy);
draw_rectangle(mapx, mapy+(496/room_height)*mapheight, mapx+mapwidth, mapy+mapheight, false);

draw_set_alpha(0.5 - decrease_alpha);
var u,v,xx,yy;
with(par_enemy)
{
  u = x/room_width;
  v = y/room_height;
  if (u &lt;= 1 &amp;&amp; v &lt;= 1) {
    xx = mapx+u*mapwidth;
    yy = mapy+v*mapheight;
    draw_set_color(c_red);
    if (object_is_ancestor(object_index, par_boss)) {
      draw_circle(xx, yy, 8, false);
    } else {
      draw_circle(xx, yy, 2, false);
    }
  }
}

with(obj_ship)
{
  u = x/room_width;
  v = y/room_height;
  xx = mapx+u*mapwidth;
  yy = mapy+v*mapheight;
  draw_set_color(c_black)
  draw_circle(xx, yy, 4, false);
}

draw_set_alpha(1);
draw_set_color(old);
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw score (OLD)
/*
old = draw_get_colour();
draw_set_colour(c_white);
draw_set_font(font_kristen_48);
draw_set_alpha(1-decrease_score_alpha);
draw_text_transformed(view_xview[0]+32, view_yview[0]+56, string(current_score), score_scale, score_scale, draw_get_alpha());
draw_set_colour(old);
draw_set_alpha(1);*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw super raiyan button (OLD)
/*
if (instance_number(obj_ship) &gt; 0)
{
  if (obj_ship.super_raiyan_available) {
    draw_rectangle_colour(view_xview+(view_wview)-96,
                          view_yview+(view_hview/2)-42,
                          view_xview+(view_wview)-32,
                          view_yview+(view_hview/2)+22,
                          c_yellow, c_orange, c_white, c_yellow, true);
    draw_sprite(spr_aura, -1, view_xview+(view_wview)-64,view_yview+(view_hview/2)-10)
  }
}

draw_set_colour(c_black);*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw messages (OLD)
/*
draw_set_font(font_consolas_14);
draw_set_colour(c_white);
for (i = 0; i &lt; 5; ++i) {
  draw_set_alpha(1-decrease_score_alpha);
  draw_text(view_xview+32, view_yview+100+(20*i), messages[i]);
}
draw_set_alpha(1);
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
