<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise Joystick Variables
//joystick

xJoy = 160
yJoy = 420
rJoy = 64;  //the diameter : 2

xStick = 0;
yStick = 0;
rStick = 32;
dStick = 0; //the direction
lStick = 0  //the length (speed of plane)


//2nd stick
xJoy2 = 788
yJoy2 = 420
rJoy2 = 64;  //the diameter : 2

xStick2 = 0;
yStick2 = 0;
rStick2 = 32;
dStick2 = 0; //the direction
lStick2 = 0  //the length (speed of plane)


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create wave generator
instance_create(0,470,obj_wavecreate)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    xStick = 0;
    yStick = 0;
    lStick = 0;
    xStick2 = 0;
    yStick2 = 0;
    lStick2 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the Virtual Sticks
for (i=0; i&lt;5; i+=1)
{
if device_mouse_check_button(i, mb_left)
{
if device_mouse_x(i) &lt; view_xview + (view_wview/2)
{
lStick = point_distance(view_xview + xJoy, view_yview + yJoy, device_mouse_x(i), device_mouse_y(i));
if lStick &lt; rJoy * 5 {
    lStick = min(rJoy, lStick);
    dStick = point_direction(view_xview + xJoy, view_yview + yJoy, device_mouse_x(i), device_mouse_y(i));
    xStick = lengthdir_x(lStick, dStick);
    yStick = lengthdir_y(lStick, dStick);
}; else {
    xStick = 0;
    yStick = 0;
    lStick = 0;
};
}
else
{
 lStick2 = point_distance(view_xview + xJoy2, view_yview + yJoy2, device_mouse_x(i), device_mouse_y(i));
if lStick2 &lt; rJoy2 * 5 {
    lStick2 = min(rJoy2, lStick2); //use this, otherwise char dir resets
    //lStick2 = 64;
    dStick2 = point_direction(view_xview + xJoy2, view_yview + yJoy2, device_mouse_x(i), device_mouse_y(i));
    xStick2 = lengthdir_x(lStick2, dStick2);
    yStick2 = lengthdir_y(lStick2, dStick2);
}; else {
    xStick2 = 0;
    yStick2 = 0;
    lStick2 = 0;
};
}
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset 2nd view
view_xview[1] = view_xview[0]
view_yview[1] = view_yview[0]
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ww = display_get_gui_width();
hh = display_get_gui_height();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Joysticks

//draw joy
draw_set_alpha(0.5);
draw_circle_color(view_xview + xJoy, view_yview + yJoy, rJoy, c_gray, c_dkgray, 0);
draw_line_color(view_xview + xJoy,view_yview + yJoy,view_xview + xJoy + xStick,view_yview + yJoy + yStick,c_black,c_black)
//draw stick
draw_set_alpha(1);
draw_circle_color(view_xview + xJoy + xStick, view_yview + yJoy + yStick, rStick, c_white, c_silver ,0)
//draw circle area
//draw_circle(view_xview + xJoy, view_yview + yJoy, rJoy * 2, 1);


//draw 2nd joy
draw_set_alpha(0.5);
draw_circle_color(view_xview + xJoy2, view_yview + yJoy2, rJoy2, c_gray, c_dkgray, 0);
draw_line_color(view_xview + xJoy2,view_yview + yJoy2,view_xview + xJoy2 + xStick2,view_yview + yJoy2 + yStick2,c_black,c_black)
//draw stick
draw_set_alpha(1);
draw_circle_color(view_xview + xJoy2 + xStick2, view_yview + yJoy2 + yStick2, rStick2, c_white, c_silver ,0)
//draw circle area
//draw_circle(view_xview + xJoy2, view_yview + yJoy2, rJoy2 * 2, 1);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
