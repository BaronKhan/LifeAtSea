<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init variables
screen = -1;
target_screen = -1;
current_button_index = -1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add menu buttons
add_menu_button(MENU_BEGIN, 0, 3, "Story");
add_menu_button(MENU_BEGIN, 1, 3, "Survival");
add_menu_button(MENU_BEGIN, 2, 3, "Options");

if (global.story_level &gt; 0) {
  add_menu_button(MENU_STORY, 0, 3, "Continue");
  add_menu_button(MENU_STORY, 1, 3, "New Game");
  add_menu_button(MENU_STORY, 2, 3, "Back");
} else {
  add_menu_button(MENU_STORY, 0, 2, "New Game");
  add_menu_button(MENU_STORY, 1, 2, "Back");
}

add_menu_button(MENU_SURVIVAL, 0, 3, "Start");
add_menu_button(MENU_SURVIVAL, 1, 3, "Scores");
add_menu_button(MENU_SURVIVAL, 2, 3, "Back");

add_menu_button(MENU_OPTIONS, 0, 5, "Graphics");
add_menu_button(MENU_OPTIONS, 1, 5, "Controls");
add_menu_button(MENU_OPTIONS, 2, 5, "Music");
add_menu_button(MENU_OPTIONS, 3, 5, "Data");
add_menu_button(MENU_OPTIONS, 4, 5, "Back");

add_menu_button(MENU_OTHER, 0, 3, "User ID");
add_menu_button(MENU_OTHER, 1, 3, "Erase");
add_menu_button(MENU_OTHER, 2, 3, "Back");

add_menu_button(MENU_VIDEO, 0, 3, "Quality");
add_menu_button(MENU_VIDEO, 1, 3, "Lighting");
add_menu_button(MENU_VIDEO, 2, 3, "Back");

//target_screen = MENU_BEGIN;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (screen != target_screen) {
  with (obj_menu_button) {
    in = (menu_id == obj_menu_control.target_screen);
  }
  screen = target_screen;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(current_button_index) {
  case 0:
    do {
      global.user_name = get_string("Provide a name for the online scoreboards (less than 10 characters): ",global.user_name);
    } until (global.user_name != "" &amp;&amp; global.user_name != "0" &amp;&amp; string_length(global.user_name) &lt; 10);
    save_data_string("Progress", "Username", global.user_name);
    break;
  case 1:
    instance_create(x,y, obj_erase_msg);
    break;
  case 2:
    target_screen = MENU_OPTIONS;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Video Screen
switch(current_button_index) {
  case 0:
    instance_create(x, y, obj_options_graphics);
    break;
  case 1:
    instance_create(x,y,obj_options_lighting);
    break;
  case 2:
    target_screen = MENU_OPTIONS;
    break;
  default:
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Options Screen
switch(current_button_index) {
  case 0:
    target_screen = MENU_VIDEO;
    break;
  case 1:
    instance_create(x,y, obj_options_controls);
    break;
  case 2:
    
    break;
  case 3:
    target_screen = MENU_OTHER;
    break;
  case 4:
    target_screen = MENU_BEGIN;
    break;
  default:
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Survival Screen
switch(current_button_index) {
  case 0:
    fade_out_to_room(room_survival);
    break;
  case 1:
    instance_create(x,y, obj_survival_score_msg);
    break;
  case 2:
    target_screen = MENU_BEGIN;
    break;
  default:
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Story Screen
if (global.story_level &gt; 0) {
  switch(current_button_index) {
    case 0:
      if (global.story_level &gt;= 15) {
        global.multiplier = 1;
        fade_out_to_room(room_level_15);
      } else {
        var level_num = global.story_level + 1;
        var story_room = ds_map_find_first(global.level_map);
        while (true) {
          if (ds_map_find_value(global.level_map, story_room) == level_num) {
            global.multiplier = 1;
            fade_out_to_room(story_room);
            break;
          } else {
            story_room = ds_map_find_next(global.level_map, story_room);
          }
        }
      }
      break;
    case 1:
      instance_create(x,y, obj_new_game_msg);
      break;
    case 2:
      target_screen = MENU_BEGIN;
    default:
      break;
  }
} else {
  switch(current_button_index) {
    case 0:
      instance_create(x,y, obj_options_controls);
      global.multiplier = 1;
      global.story_level = 0;
      global.story_score = 0;
      save_data("Progress", "Story", global.story_level);
      save_data("Progress", "StoryScore", global.story_score);
      fade_out_to_room(room_tutorial_1);
      break;
    case 1:
      target_screen = MENU_BEGIN;
      break;
    default:
      break;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Beginning Screen
switch(current_button_index) {
  case 0:
    target_screen = MENU_STORY;
    break;
  case 1:
    target_screen = MENU_SURVIVAL;
    break;
  case 2:
    target_screen = MENU_OPTIONS;
    break;
  default:
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
