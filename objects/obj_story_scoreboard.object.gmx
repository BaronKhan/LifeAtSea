<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_message_box</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_message_box</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init text box
event_inherited();
title = "Story Mode Scores"
add_button(0, 150, "Cool", 1);
text_font = font_consolas_8;
title_font = font_consolas_14;
text_y_offset = -16;
title_y_offset = -40;

text2 = ""//Other scores
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init GJ API
gj_init("355886", "981de584f722b2d91a328255d2fe21d3");

asyncdialog[0]=-1
asyncdialog[1]=-1
asyncdialog[2]=-1
senttrophy[0]=false
senttrophy[1]=false
loggedontimes=0
uname=""
utoken=""
loginrequest=-1
httprequest[0]=-1
httprequest[1]=-1
httprequest[2]=-1
httprequest[3]=-1
httprequest[4]=-1
userisawesome=false
prevscore=0
currusertype="user"

highscore[0]="(Loading)"
highscore[1]="(Loading)"
highscore[2]="(Loading)"
highscore[3]="(Loading)"
highscore[4]="(Loading)"
highscore[5]="(Loading)"
highscore[6]="(Loading)"
highscore[7]="(Loading)"
highscore[8]="(Loading)"
highscore[9]="(Loading)"
highscore[10]="(Loading)"
highscore[11]="(Loading)"
highscore[12]="(Loading)"
highscore[13]="(Loading)"
highscore[14]="(Loading)"
highscore[15]="(Loading)"
highscore[16]="(Loading)"
highscore[17]="(Loading)"
highscore[18]="(Loading)"
highscore[19]="(Loading)"
highscore[20]="(Loading)"
highscore[21]="(Loading)"
highscore[22]="(Loading)"
highscore[23]="(Loading)"
highscore[24]="(Loading)"
highscore[25]="(Loading)"
highscore[26]="(Loading)"
highscore[27]="(Loading)"
highscore[28]="(Loading)"
highscore[29]="(Loading)"
highscore[30]="(Loading)"

name[0]="(Loading)"
name[1]="(Loading)"
name[2]="(Loading)"
name[3]="(Loading)"
name[4]="(Loading)"
name[5]="(Loading)"
name[6]="(Loading)"
name[7]="(Loading)"
name[8]="(Loading)"
name[9]="(Loading)"
name[10]="(Loading)"
name[11]="(Loading)"
name[12]="(Loading)"
name[13]="(Loading)"
name[14]="(Loading)"
name[15]="(Loading)"
name[16]="(Loading)"
name[17]="(Loading)"
name[18]="(Loading)"
name[19]="(Loading)"
name[20]="(Loading)"
name[21]="(Loading)"
name[22]="(Loading)"
name[23]="(Loading)"
name[24]="(Loading)"
name[25]="(Loading)"
name[26]="(Loading)"
name[27]="(Loading)"
name[28]="(Loading)"
name[29]="(Loading)"
name[30]="(Loading)"

draw_table = false
score_to_send = 0
send_score = false

alarm[1] = 1;
alarm[2] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>httprequest[1]=gj_scores_get("361514",30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Send score
score_to_send = global.story_score;
while (global.user_name == "" || string_length(global.user_name) &gt;= 10) {
  global.user_name = get_string("Provide a name for the online scoreboard (less than 10 characters). You can change this in the Options.","");
}
save_data_string("Progress", "Username", global.user_name);
gj_scores_add_guest("361514",string(score_to_send),score_to_send,"",global.user_name);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ping session
gj_session_ping(true) //User is active.
alarm[0]=30*room_speed //Ping every 30 seconds.
httprequest[1]=gj_scores_get("361514",50);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
var board = "";

for (var i = 0; i &lt; 15; i++) {
  if ((!is_undefined(name[i])) &amp;&amp; (!is_undefined(highscore[i]))) {
    if (string_pos(highscore[i], "(Loading)") == 0) {
      board += string(i+1)+". "+string(name[i]+": "+string(highscore[i])+"#");
    }
  }
}

text = board;

var board2 = "";

for (var i = 15; i &lt; 30; i++) {
  if ((!is_undefined(name[i])) &amp;&amp; (!is_undefined(highscore[i]))) {
    if (string_pos(highscore[i], "(Loading)") == 0) {
      board2 += string(i+1)+". "+string(name[i]+": "+string(highscore[i])+"#");
    }
  }
}

text2 = board2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check result id...
var resultid=gj_result_id();
//If this was the login request...
if(resultid==loginrequest)
{
    if(gj_result_status())
    {
        //Success! Now give user a trophy.
       // gj_trophy_add("1409")
        //And init session too.
        gj_session_open()
        alarm[0]=30*room_speed //Ping every 30 seconds.
        //Let's check if user was logged in earlier.
        //httprequest[2]=gj_datastore_get_user("logincount")
        //httprequest[3]=gj_user_info_fromusername(gj_user_username())
       // httprequest[4]=gj_trophy_get_id("1411")
    }
    else
    show_message_async(gj_result_error())
}
else if(resultid==httprequest[0]) //Score added to list (or failed...)
{
    if(gj_result_status())
    {
        //Success!
        show_message_async("You succesfully added your score to the list.")
        httprequest[1]=gj_scores_get("361514",6) //Get new highscore.
    }
    else
    show_message_async(gj_result_error())
}
else if(resultid==httprequest[1]) //If we just recieved the highscore. 
{
    if(gj_result_status())
    {
        /*highscore[0]=gj_result_data_field_num("score",0) //Set highscore text.
        name[0] = gj_result_data_field_num("display_name",0)
        highscore[1]=gj_result_data_field_num("score",1)
        name[1] = gj_result_data_field_num("display_name",1)
        highscore[2]=gj_result_data_field_num("score",2)
        name[2] = gj_result_data_field_num("display_name",2)
        highscore[3]=gj_result_data_field_num("score",3)
        name[3] = gj_result_data_field_num("display_name",3)
        highscore[4]=gj_result_data_field_num("score",4)
        name[4] = gj_result_data_field_num("display_name",4)
        highscore[5]=gj_result_data_field_num("score",5)
        name[5] = gj_result_data_field_num("display_name",5)
        highscore[6]=gj_result_data_field_num("score",6)
        name[6] = gj_result_data_field_num("display_name",6)
        highscore[7]=gj_result_data_field_num("score",7)
        name[7] = gj_result_data_field_num("display_name",8)
        highscore[8]=gj_result_data_field_num("score",8)
        name[8] = gj_result_data_field_num("display_name",8)
        highscore[9]=gj_result_data_field_num("score",9)
        name[9] = gj_result_data_field_num("display_name",9)
        highscore[10]=gj_result_data_field_num("score",10)
        name[10] = gj_result_data_field_num("display_name",10)
        highscore[11]=gj_result_data_field_num("score",11)
        name[11] = gj_result_data_field_num("display_name",11)
        highscore[12]=gj_result_data_field_num("score",12)
        name[12] = gj_result_data_field_num("display_name",12)
        highscore[13]=gj_result_data_field_num("score",13)
        name[13] = gj_result_data_field_num("display_name",13)
        highscore[14]=gj_result_data_field_num("score",14)
        name[14] = gj_result_data_field_num("display_name",14)
        highscore[15]=gj_result_data_field_num("score",15)
        name[15] = gj_result_data_field_num("display_name",15)
        highscore[16]=gj_result_data_field_num("score",16)
        name[16] = gj_result_data_field_num("display_name",16)
        highscore[17]=gj_result_data_field_num("score",17)
        name[17] = gj_result_data_field_num("display_name",17)
        highscore[18]=gj_result_data_field_num("score",18)
        name[18] = gj_result_data_field_num("display_name",18)
        highscore[19]=gj_result_data_field_num("score",19)
        name[19] = gj_result_data_field_num("display_name",19)
        highscore[20]=gj_result_data_field_num("score",20)
        name[20] = gj_result_data_field_num("display_name",20)
        highscore[21]=gj_result_data_field_num("score",21)
        name[21] = gj_result_data_field_num("display_name",21)
        highscore[22]=gj_result_data_field_num("score",22)
        name[22] = gj_result_data_field_num("display_name",22)
        highscore[23]=gj_result_data_field_num("score",23)
        name[23] = gj_result_data_field_num("display_name",23)
        highscore[24]=gj_result_data_field_num("score",24)
        name[24] = gj_result_data_field_num("display_name",24)
        highscore[25]=gj_result_data_field_num("score",25)
        name[25] = gj_result_data_field_num("display_name",25)
        highscore[26]=gj_result_data_field_num("score",26)
        name[26] = gj_result_data_field_num("display_name",26)
        highscore[27]=gj_result_data_field_num("score",27)
        name[27] = gj_result_data_field_num("display_name",27)
        highscore[28]=gj_result_data_field_num("score",28)
        name[28] = gj_result_data_field_num("display_name",28)
        highscore[29]=gj_result_data_field_num("score",29)
        name[29] = gj_result_data_field_num("display_name",29)*/
        for (var i = 0; i &lt; 30; ++i) {
          highscore[i]=gj_result_data_field_num("score",i)
          name[i] = gj_result_data_field_num("display_name",i)
        }
        draw_table = true;
        
        //If there were multiple highscores, the following code would return the 2nd highscore.
        //gj_result_data_field_num("score",1)
        //And you would be able to check how many highscores there are with:
        //gj_result_data_count()
    }
    else
    {
     highscore_1="(error)"
     highscore_2="(error)"
     highscore_3="(error)"
     highscore_4="(error)"
     highscore_5="(error)"
    }
}
else if(resultid==httprequest[2]) //Just recieved the login count
{
    var status=gj_result_status();
    if(status==1)
    {
        //User logged in already. Check login count and add 1 to the logincount.
        gj_datastore_update_user("logincount","1","add")
        //And check how many time the user logged in before.
        loggedontimes=real(gj_result_data_field("data"))
    }
    else if(status==0)
    {
        if(gj_result_error()="No item with that key could be found.")
        {
            //Item does not exists, so user didn't logon earlier. Set login to 1 time.
            gj_datastore_set_user("logincount","1")
        }
    }
}
else if(resultid==httprequest[3]) //If we just recieved user information.
{
    if(gj_result_status())
    {
        currusertype=gj_result_data_field("type") //Loading user type.
    }
}
else if(resultid==httprequest[4]) //If user is awesome (last trophy is achieved)
{
    if(gj_result_status())
    {
        if(gj_result_data_field("achieved")!="false") //Check if trophy is achieved.
        {
            userisawesome=true
            awesomesince=gj_result_data_field("achieved") //This now returns since when the user has the trophy.
        }
    }
}
gj_result_clear()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fade_out_to_room(room_title);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw box
var view_centre_x = (view_wview[0]/2);
var view_centre_y = (view_hview[0]/2);

//Draw box
draw_sprite(sprite_index, -1, view_centre_x, view_centre_y+yy);

//Draw title
draw_set_color(c_black);
draw_set_font(title_font);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text_ext(view_centre_x+title_x_offset, (view_hview[0]*.3)+yy+title_y_offset, title, 50, 600);

//Draw buttons
draw_set_font(font_consolas_14);
for (var i=0; i &lt; button_count; i++) {
  var button = ds_map_create();
  ds_map_copy(button, buttons[i]);
  var x_offset = ds_map_find_value(button, "x_offset");
  var y_offset = ds_map_find_value(button, "y_offset");
  var text_ = ds_map_find_value(button, "text");
  draw_sprite(spr_message_button, -1, view_centre_x+x_offset, view_centre_y+y_offset+yy);
  draw_text(view_centre_x+x_offset, view_centre_y+y_offset+yy, text_);
}

//Draw image and text
draw_set_font(text_font);
draw_set_halign(fa_center);
if (draw_table) {
  if (text2 == "") {
    draw_text_ext(view_centre_x+text_x_offset, view_centre_y+yy+text_y_offset, text, 16, 440);
  } else {
    draw_text_ext(view_centre_x+text_x_offset-100, view_centre_y+yy+text_y_offset, text, 16, 440);
    draw_text_ext(view_centre_x+text_x_offset+100, view_centre_y+yy+text_y_offset, text2, 16, 440);
  }
} else {
  draw_text_ext(view_centre_x+text_x_offset, view_centre_y+yy+text_y_offset, "(Loading)", 16, 440);
}
draw_text_ext(view_centre_x+text_x_offset, view_centre_y+yy+text_y_offset+132, "Your Story Score: "+string(global.story_score), 16, 440);

draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
